# teflo config file
# ==================

# the config file provides an additional way to define teflo parameters

# config file is searched for in the following order below. a configuration
# setting will be overrided if another source is found last
#   1. /etc/teflo/teflo.cfg
#   2. ./teflo.cfg (current working directory)
#   3. TEFLO_SETTINGS (environment variable)

# DEFAULT SETTINGS

[defaults]
log_level=debug
data_folder=/var/local/teflo
workspace=.
#
# Endpoint URL of Cachet Status page
# Cachet status page.
resource_check_endpoint=<endpoint_ url_for_dependency_check>
#
# A static inventory path can be used for ansible inventory file.
# Can be relative path in teflo scenario workspace
# inventory_folder=static/inventory
#
# Can be a directory in the user $HOME path
# inventory_folder=~/scenario/static/inventory
#
# Can be an absolute path
# inventory_folder=/test/scenario/static/inventory
#
# Can be a path containing an environment variable
# inventory_folder=$WORKSPACE/scenario/static/inventory
# default value of the inventory folder is 'TEFLO_DATA_FOLDER/.results/inventory'
inventory_folder=<path for ansible inventory files>

# credentials file and Ansible Vault password
#
# User can set all the credential information in a text file and encrypt it using ansible vault.
# So that way users do not have to provide any credentials in the teflo.cfg file
# Users then have to provide the path of the encrypted file under CREDENTIALS_PATH.
# Provide the vault password as VAULTPASS. This password can be
# exported as an environmental variable
CREDENTIAL_PATH=<path for the credentials file>
VAULTPASS=<ansible vault password>

# *****************************************************************************************

# TIME OUT VALUE FOR EACH STAGE
# you can set the timeout value for each of teflo's stages (validation, provision, orchestrate, execute,
# report and cleanup)
[timeout]
provision=500
cleanup=1000
orchestrate=300
execute=200
report=100
validate=10

# *****************************************************************************************

# CREDENTIAL SETTINGS
# for provisioners and plugins orother tools being used with teflo
# users can provide teh credential information as [credentials: tool name]

# for beaker
[credentials:beaker-creds]
hub_url=<hub_url>
keytab=<keytab>
keytab_principal=<keytab_principal>
username=<username>
password=<password>

# for openstack
[credentials:openstack-creds]
auth_url=<auth_url>
tenant_name=<tenant_name>
username=<username>
password=<password>
domain_name=<domain_name>
project_id=<project_id>
project_domain_id=<project_domain_id>

# for email notification
[credentials:email]
smtp_host=<smtp server>

# for notifications to slack/gchat using webhooks
[credentials:webhook]
gchat_url=https://chat.googleapis.com/v1/spaces/abc
slack_url=https://hooks.slack.com/services/abc
webhook_url=https://gerneric.com


# *****************************************************************************************

# PROVISIONER SETTINGS
# setting releated to provisioner being used with teflo,
# user can set its different parameters as [provisioner: provisioner name]
# in below example these are settings for openstack-client provisioner plugin

[provisioner:openstack-client]
public_network=provider_net_cci_*
best_available_network=True
best_available_network_filter=provider_net_cci_4,provider_net_cci_8,provider_net_cci_9
best_available_network_ip_version=4
unique_name=true


# *****************************************************************************************

# ORCHESTRATOR SETTINGS
# setting releated to orchestrator being used with teflo,
# user can set its different parameters as [orchestrator: orchestrator name]
# in below example these are settings for ansible which is Teflo's default orchestrator

[orchestrator:ansible]
# remove ansible log
log_remove=False
# set the verbosity
# this option will override the max verbosity when log level is set to debug.
verbosity=vv

# *****************************************************************************************

# EXECUTOR SETTINGS
# setting releated to executor being used with teflo,
# user can set its different parameters as [executor: executor name]
# in below example these are settings for runner which is Teflo's default executor

[executor:runner]
# set the testrun_results to false if you dont want it to be collected in the logs for the xml files collected during
# execution
testrun_results=False
# Teflo by default will NOT exit if the collection of artifact task fails. In order to exit the run on an error during
# collection of artifacts user can set this field to true , else False or ignore the field.
exit_on_error=True

# *****************************************************************************************

# TASK CONCURRENCY

[task_concurrency]
# this controls how tasks (provision, orchestrate, execute, report) are executed
# by Teflo either parallel or sequential. 
# When set to False the task will execute sequentially. 
provision=False
report=False

